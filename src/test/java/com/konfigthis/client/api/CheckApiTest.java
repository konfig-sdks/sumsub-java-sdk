/*
 * Sumsub API
 * Sumsub is the one verification platform to secure the whole user journey. With Sumsub's customizable KYC, KYB, transaction monitoring and fraud prevention solutions, you can orchestrate your verification process, welcome more customers worldwide, meet compliance requirements, reduce costs and protect your business.  Sumsub has over 2,000 clients in fintech, crypto, transportation, trading, e-commerce and gaming industries including Binance, Wirex, Avis, Bybit, Huobi, Unlimit, Flutter, Kaizen Gaming, and TransferGo.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CheckPerformNameCrossValidationRequest;
import com.konfigthis.client.model.CheckPerformNameCrossValidationRequest1;
import com.konfigthis.client.model.CheckPerformNameCrossValidationRequestIdDocsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CheckApi
 */
@Disabled
public class CheckApiTest {

    private static CheckApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CheckApi(apiClient);
    }

    /**
     * Get additional company check data
     *
     * Returns company check results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void additionalCompanyDataTest() throws ApiException {
        String applicantId = null;
        api.additionalCompanyData(applicantId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get additional PoA data
     *
     * Returns PoA data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void additionalPoaDataTest() throws ApiException {
        String applicantId = null;
        api.additionalPoaData(applicantId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get email confirmation check results
     *
     * Returns email confirmation check results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void emailConfirmationResultsTest() throws ApiException {
        String applicantId = null;
        api.emailConfirmationResults(applicantId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get IP check results
     *
     * Returns IP check results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ipCheckResultsTest() throws ApiException {
        String applicantId = null;
        api.ipCheckResults(applicantId)
                .execute();
        // TODO: test validations
    }

    /**
     * Perform name cross validation
     *
     * Performs a name cross validation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void performNameCrossValidationTest() throws ApiException {
        List<CheckPerformNameCrossValidationRequestIdDocsInner> idDocs = null;
        String comparisonMode = null;
        api.performNameCrossValidation(idDocs, comparisonMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Get phone confirmation check results
     *
     * Returns phone confirmation check results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void phoneConfirmationResultsTest() throws ApiException {
        String applicantId = null;
        api.phoneConfirmationResults(applicantId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get TIN (SSN) check results
     *
     * Returns TIN (SSN) check results.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tinSsnCheckResultsTest() throws ApiException {
        String applicantId = null;
        api.tinSsnCheckResults(applicantId)
                .execute();
        // TODO: test validations
    }

}
